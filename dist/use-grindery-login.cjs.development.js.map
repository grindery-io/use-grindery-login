{"version":3,"file":"use-grindery-login.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useState, createContext, useContext, useEffect } from 'react';\n\nexport const LOGIN_URL =\n  window.location.hostname.includes('-staging.grindery') ||\n  window.location.hostname.includes('localhost') ||\n  window.location.hostname.includes('127.0.0.1')\n    ? 'https://login-staging.grindery.io'\n    : 'https://login.grindery.io';\n\n// Authentication token object definition\nexport type AuthToken = {\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  token_type: string;\n};\n\n// Context properties definition\nexport type GrinderyLoginContextProps = {\n  /** Authentication token object */\n  token: AuthToken | null;\n\n  /** User ID */\n  user: string | null;\n\n  /** User address */\n  address: string | null;\n\n  /** Connect user */\n  connect: () => void;\n\n  /** Disconnect user */\n  disconnect: () => void;\n};\n\nexport type GrinderyLoginProviderProps = {\n  children: React.ReactNode;\n};\n\n// Default context properties\nconst defaultContext = {\n  token: null,\n  address: null,\n  user: null,\n  connect: () => {},\n  disconnect: () => {},\n};\n\n/** Grindery Nexus Context */\nexport const GrinderyLoginContext = createContext<GrinderyLoginContextProps>(\n  defaultContext\n);\n\n/**\n * The component provides context for user authentication.\n *\n * It manages authentication state (token, user, address),\n * provides connect and disconnect functionality,\n * and listens for updates from a hidden iframe.\n *\n * It also exposes the context via the useGrinderyLogin hook.\n */\nexport const GrinderyLoginProvider = ({\n  children,\n}: GrinderyLoginProviderProps) => {\n  // Authentication token object\n  const [token, setToken] = useState<AuthToken | null>(null);\n\n  // User ID\n  const [user, setUser] = useState<string | null>(null);\n\n  // User address\n  const [address, setAddress] = useState<string | null>(null);\n\n  // Connect user\n  const connect = async () => {\n    const currentUrl = window.location.href.split('?')[0];\n    window.location.href = `${LOGIN_URL}?redirect_uri=${currentUrl}`;\n  };\n\n  // Disconnect user\n  const disconnect = async () => {\n    // get iframe element\n    const iframe = document.getElementById(\n      'grindery-login-iframe'\n    ) as HTMLIFrameElement;\n\n    // send message to iframe\n    iframe.contentWindow?.postMessage(\n      {\n        method: 'grindery-auth-session-clear',\n      },\n      LOGIN_URL\n    );\n    setToken(null);\n    setAddress(null);\n    setUser(null);\n  };\n\n  // Listen for messages from the login iframe\n  useEffect(() => {\n    // handle message\n    function handleMessage(event: any) {\n      if (event.data?.method === 'grindery-auth-session') {\n        // handle error\n        if (event.data?.error) {\n          console.log('grindery-auth-session error: ', event.data?.error);\n        }\n\n        setToken(event.data?.params?.token || null);\n        setAddress(event.data?.params?.address || null);\n        setUser(event.data?.params?.user || null);\n      }\n    }\n\n    // add event listener\n    window.addEventListener('message', handleMessage);\n\n    // remove event listener on unmount\n    return () => window.removeEventListener('message', handleMessage);\n  }, []);\n\n  return (\n    <GrinderyLoginContext.Provider\n      value={{\n        token,\n        user,\n        address,\n        connect,\n        disconnect,\n      }}\n    >\n      {/* Hidden iframe to handle login session */}\n      <iframe\n        id=\"grindery-login-iframe\"\n        title=\"Grindery Login Session\"\n        src={`${LOGIN_URL}/session`}\n        style={{ display: 'none' }}\n      />\n      {children}\n    </GrinderyLoginContext.Provider>\n  );\n};\n\n/** Grindery Login Hook */\nexport const useGrinderyLogin = () => useContext(GrinderyLoginContext);\n\nexport default GrinderyLoginProvider;\n"],"names":["LOGIN_URL","window","location","hostname","includes","defaultContext","token","address","user","connect","disconnect","GrinderyLoginContext","createContext","GrinderyLoginProvider","_ref","children","_useState","useState","setToken","_useState2","setUser","_useState3","setAddress","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentUrl","wrap","_callee$","_context","prev","next","href","split","stop","apply","arguments","_ref3","_callee2","_iframe$contentWindow","iframe","_callee2$","_context2","document","getElementById","contentWindow","postMessage","method","useEffect","handleMessage","event","_event$data","data","_event$data2","_event$data4","_event$data5","_event$data6","error","_event$data3","console","log","params","addEventListener","removeEventListener","React","Provider","value","id","title","src","style","display","useGrinderyLogin","useContext"],"mappings":"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"}