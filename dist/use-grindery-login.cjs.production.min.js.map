{"version":3,"file":"use-grindery-login.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useState, createContext, useContext, useEffect } from 'react';\n\nexport const LOGIN_URL =\n  window.location.hostname.includes('-staging.grindery') ||\n  window.location.hostname.includes('localhost') ||\n  window.location.hostname.includes('127.0.0.1')\n    ? 'https://login-staging.grindery.io'\n    : 'https://login.grindery.io';\n\n// Authentication token object definition\nexport type AuthToken = {\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  token_type: string;\n};\n\n// Context properties definition\nexport type GrinderyLoginContextProps = {\n  /** Authentication token object */\n  token: AuthToken | null;\n\n  /** User ID */\n  user: string | null;\n\n  /** User address */\n  address: string | null;\n\n  /** Connect user */\n  connect: () => void;\n\n  /** Disconnect user */\n  disconnect: () => void;\n};\n\nexport type GrinderyLoginProviderProps = {\n  children: React.ReactNode;\n};\n\n// Default context properties\nconst defaultContext = {\n  token: null,\n  address: null,\n  user: null,\n  connect: () => {},\n  disconnect: () => {},\n};\n\n/** Grindery Nexus Context */\nexport const GrinderyLoginContext = createContext<GrinderyLoginContextProps>(\n  defaultContext\n);\n\n/**\n * The component provides context for user authentication.\n *\n * It manages authentication state (token, user, address),\n * provides connect and disconnect functionality,\n * and listens for updates from a hidden iframe.\n *\n * It also exposes the context via the useGrinderyLogin hook.\n */\nexport const GrinderyLoginProvider = ({\n  children,\n}: GrinderyLoginProviderProps) => {\n  // Authentication token object\n  const [token, setToken] = useState<AuthToken | null>(null);\n\n  // User ID\n  const [user, setUser] = useState<string | null>(null);\n\n  // User address\n  const [address, setAddress] = useState<string | null>(null);\n\n  // Connect user\n  const connect = async () => {\n    const currentUrl = window.location.href.split('?')[0];\n    window.location.href = `${LOGIN_URL}?redirect_uri=${currentUrl}`;\n  };\n\n  // Disconnect user\n  const disconnect = async () => {\n    // get iframe element\n    const iframe = document.getElementById(\n      'grindery-login-iframe'\n    ) as HTMLIFrameElement;\n\n    // send message to iframe\n    iframe.contentWindow?.postMessage(\n      {\n        method: 'grindery-auth-session-clear',\n      },\n      LOGIN_URL\n    );\n    setToken(null);\n    setAddress(null);\n    setUser(null);\n  };\n\n  // Listen for messages from the login iframe\n  useEffect(() => {\n    // handle message\n    function handleMessage(event: any) {\n      if (event.data?.method === 'grindery-auth-session') {\n        // handle error\n        if (event.data?.error) {\n          console.log('grindery-auth-session error: ', event.data?.error);\n        }\n\n        setToken(event.data?.params?.token || null);\n        setAddress(event.data?.params?.address || null);\n        setUser(event.data?.params?.user || null);\n      }\n    }\n\n    // add event listener\n    window.addEventListener('message', handleMessage);\n\n    // remove event listener on unmount\n    return () => window.removeEventListener('message', handleMessage);\n  }, []);\n\n  return (\n    <GrinderyLoginContext.Provider\n      value={{\n        token,\n        user,\n        address,\n        connect,\n        disconnect,\n      }}\n    >\n      {/* Hidden iframe to handle login session */}\n      <iframe\n        id=\"grindery-login-iframe\"\n        title=\"Grindery Login Session\"\n        src={`${LOGIN_URL}/session`}\n        style={{ display: 'none' }}\n      />\n      {children}\n    </GrinderyLoginContext.Provider>\n  );\n};\n\n/** Grindery Login Hook */\nexport const useGrinderyLogin = () => useContext(GrinderyLoginContext);\n\nexport default GrinderyLoginProvider;\n"],"names":["LOGIN_URL","window","location","hostname","includes","GrinderyLoginContext","createContext","token","address","user","connect","disconnect","GrinderyLoginProvider","_ref","children","_useState","useState","setToken","_useState2","setUser","_useState3","setAddress","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentUrl","wrap","_context","prev","next","href","split","stop","apply","arguments","_ref3","_callee2","_iframe$contentWindow","iframe","_context2","document","getElementById","contentWindow","postMessage","method","useEffect","handleMessage","event","_event$data2","_event$data4","_event$data5","_event$data6","_event$data3","_event$data","data","error","console","log","params","addEventListener","removeEventListener","React","Provider","value","id","title","src","style","display","useContext"],"mappings":"25NAEaA,EACXC,OAAOC,SAASC,SAASC,SAAS,sBAClCH,OAAOC,SAASC,SAASC,SAAS,cAClCH,OAAOC,SAASC,SAASC,SAAS,aAC9B,oCACA,4BA0COC,EAAuBC,gBATb,CACrBC,MAAO,KACPC,QAAS,KACTC,KAAM,KACNC,QAAS,aACTC,WAAY,eAiBDC,EAAwB,SAAHC,OAChCC,EAAQD,EAARC,SAGAC,EAA0BC,WAA2B,MAA9CT,EAAKQ,KAAEE,EAAQF,KAGtBG,EAAwBF,WAAwB,MAAzCP,EAAIS,KAAEC,EAAOD,KAGpBE,EAA8BJ,WAAwB,MAA/CR,EAAOY,KAAEC,EAAUD,KAGpBV,aAAO,IAAAY,EAAAC,EAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACRJ,EAAa1B,OAAOC,SAAS8B,KAAKC,MAAM,KAAK,GACnDhC,OAAOC,SAAS8B,KAAUhC,mBAA0B2B,EAAa,OAAA,UAAA,OAAAE,EAAAK,UAAAR,OAClE,kBAHY,OAAAJ,EAAAa,WAAAC,eAMPzB,aAAU,IAAA0B,EAAAd,EAAAC,IAAAC,MAAG,SAAAa,IAAA,IAAAC,EAAAC,EAAA,OAAAhB,IAAAI,eAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAEXS,EAASE,SAASC,eACtB,gCAIFJ,EAAAC,EAAOI,gBAAPL,EAAsBM,YACpB,CACEC,OAAQ,+BAEV9C,GAEFiB,EAAS,MACTI,EAAW,MACXF,EAAQ,MAAM,OAAA,UAAA,OAAAsB,EAAAP,UAAAI,OACf,kBAhBe,OAAAD,EAAAF,WAAAC,eAyChB,OAtBAW,aAAU,WAER,SAASC,EAAcC,SAC+BC,EAAAC,EAAAC,EAAAC,EAE3BC,EAFE,kCAAvBC,EAAAN,EAAMO,aAAND,EAAYT,iBAEdI,EAAID,EAAMO,OAANN,EAAYO,OACdC,QAAQC,IAAI,uCAA+BL,EAAEL,EAAMO,aAANF,EAAYG,OAG3DxC,UAASkC,EAAAF,EAAMO,cAAIL,EAAVA,EAAYS,eAAZT,EAAoB5C,QAAS,MACtCc,UAAW+B,EAAAH,EAAMO,cAAIJ,EAAVA,EAAYQ,eAAZR,EAAoB5C,UAAW,MAC1CW,UAAQkC,EAAAJ,EAAMO,cAAIH,EAAVA,EAAYO,eAAZP,EAAoB5C,OAAQ,OAQxC,OAHAR,OAAO4D,iBAAiB,UAAWb,GAG5B,WAAA,OAAM/C,OAAO6D,oBAAoB,UAAWd,MAClD,IAGDe,gBAAC1D,EAAqB2D,UACpBC,MAAO,CACL1D,MAAAA,EACAE,KAAAA,EACAD,QAAAA,EACAE,QAAAA,EACAC,WAAAA,IAIFoD,0BACEG,GAAG,wBACHC,MAAM,yBACNC,IAAQpE,aACRqE,MAAO,CAAEC,QAAS,UAEnBxD,kIAMyB,WAAH,OAASyD,aAAWlE"}