{"version":3,"file":"use-grindery-login.esm.js","sources":["../src/utils.ts","../src/index.tsx"],"sourcesContent":["declare global {\n  interface Window {\n    _hsq?: any[];\n    LOQ?: any[];\n  }\n}\n\nexport const identifyUserInHubspot = (userId: string, email: string) => {\n  let _hsq = (window._hsq = window._hsq || []);\n  _hsq.push([\n    'identify',\n    {\n      email: email,\n      id: userId,\n    },\n  ]);\n};\n\nexport const identifyUserInLuckyOrange = (userId: string, email: string) => {\n  window.LOQ = window.LOQ || [];\n  window.LOQ.push([\n    'ready',\n    async (LO: any) => {\n      await LO.$internal.ready('visitor');\n      LO.visitor.identify(userId, { email: email });\n    },\n  ]);\n};\n","import React, {\n  useState,\n  createContext,\n  useContext,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { identifyUserInHubspot, identifyUserInLuckyOrange } from './utils';\n\n// Grindery Engine URL\nconst ENGINE_URL = 'https://orchestrator.grindery.org';\n\n// Login page URL\nexport const LOGIN_URL =\n  window.location.hostname.includes('-staging.grindery') ||\n  window.location.hostname.includes('localhost') ||\n  window.location.hostname.includes('127.0.0.1')\n    ? 'https://login-staging.grindery.io'\n    : 'https://login.grindery.io';\n\n// Authentication token object definition\nexport type AuthToken = {\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  token_type: string;\n};\n\n// Context properties definition\nexport type GrinderyLoginContextProps = {\n  /** Authentication token object */\n  token: AuthToken | null;\n\n  /** User ID */\n  user: string | null;\n\n  /** User address */\n  address: string | null;\n\n  /** Connect user */\n  connect: () => void;\n\n  /** Disconnect user */\n  disconnect: () => void;\n};\n\nexport type GrinderyLoginProviderProps = {\n  children: React.ReactNode;\n};\n\n// Default context properties\nconst defaultContext = {\n  token: null,\n  address: null,\n  user: null,\n  connect: () => {},\n  disconnect: () => {},\n};\n\n/** Grindery Nexus Context */\nexport const GrinderyLoginContext = createContext<GrinderyLoginContextProps>(\n  defaultContext\n);\n\n/**\n * The component provides context for user authentication.\n *\n * It manages authentication state (token, user, address),\n * provides connect and disconnect functionality,\n * and listens for updates from a hidden iframe.\n *\n * It also exposes the context via the useGrinderyLogin hook.\n */\nexport const GrinderyLoginProvider = ({\n  children,\n}: GrinderyLoginProviderProps) => {\n  // Authentication token object\n  const [token, setToken] = useState<AuthToken | null>(null);\n\n  // User ID\n  const [user, setUser] = useState<string | null>(null);\n\n  // User address\n  const [address, setAddress] = useState<string | null>(null);\n\n  // Connect user\n  const connect = async () => {\n    const currentUrl = window.location.href.split('?')[0];\n    window.location.href = `${LOGIN_URL}?redirect_uri=${currentUrl}`;\n  };\n\n  // Disconnect user\n  const disconnect = async () => {\n    // get iframe element\n    const iframe = document.getElementById(\n      'grindery-login-iframe'\n    ) as HTMLIFrameElement;\n\n    // send message to iframe\n    iframe.contentWindow?.postMessage(\n      {\n        method: 'grindery-auth-session-clear',\n      },\n      LOGIN_URL\n    );\n    setToken(null);\n    setAddress(null);\n    setUser(null);\n  };\n\n  const identifyUser = useCallback(async () => {\n    if (user && token?.access_token) {\n      try {\n        const rawResponse = await fetch(`${ENGINE_URL}`, {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token.access_token}`,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            jsonrpc: '2.0',\n            id: new Date(),\n            method: 'or_getUserEmail',\n            params: {},\n          }),\n        });\n        const getUserEmailResponse = await rawResponse.json();\n        if (getUserEmailResponse.result) {\n          identifyUserInHubspot(user, getUserEmailResponse.result);\n          identifyUserInLuckyOrange(user, getUserEmailResponse.result);\n        } else {\n          throw new Error('No user email found');\n        }\n      } catch (error) {\n        console.error('identifyUser error: ', error);\n      }\n    }\n  }, [user, token]);\n\n  // Listen for messages from the login iframe\n  useEffect(() => {\n    // handle message\n    function handleMessage(event: any) {\n      if (event.data?.method === 'grindery-auth-session') {\n        // handle error\n        if (event.data?.error) {\n          console.log('grindery-auth-session error: ', event.data?.error);\n        }\n\n        setToken(event.data?.params?.token || null);\n        setAddress(event.data?.params?.address || null);\n        setUser(event.data?.params?.user || null);\n      }\n    }\n\n    // add event listener\n    window.addEventListener('message', handleMessage);\n\n    // remove event listener on unmount\n    return () => window.removeEventListener('message', handleMessage);\n  }, []);\n\n  useEffect(() => {\n    identifyUser();\n  }, [identifyUser]);\n\n  return (\n    <GrinderyLoginContext.Provider\n      value={{\n        token,\n        user,\n        address,\n        connect,\n        disconnect,\n      }}\n    >\n      {/* Hidden iframe to handle login session */}\n      <iframe\n        id=\"grindery-login-iframe\"\n        title=\"Grindery Login Session\"\n        src={`${LOGIN_URL}/session`}\n        style={{ display: 'none' }}\n      />\n      {children}\n    </GrinderyLoginContext.Provider>\n  );\n};\n\n/** Grindery Login Hook */\nexport const useGrinderyLogin = () => useContext(GrinderyLoginContext);\n\nexport default GrinderyLoginProvider;\n"],"names":["identifyUserInHubspot","userId","email","_hsq","window","push","id","identifyUserInLuckyOrange","LOQ","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","LO","wrap","_callee$","_context","prev","next","$internal","ready","visitor","identify","stop","_x","apply","arguments","ENGINE_URL","LOGIN_URL","location","hostname","includes","defaultContext","token","address","user","connect","disconnect","GrinderyLoginContext","createContext","GrinderyLoginProvider","children","_useState","useState","setToken","_useState2","setUser","_useState3","setAddress","_ref2","currentUrl","href","split","_ref3","_callee2","_iframe$contentWindow","iframe","_callee2$","_context2","document","getElementById","contentWindow","postMessage","method","identifyUser","useCallback","_callee3","rawResponse","getUserEmailResponse","_callee3$","_context3","access_token","fetch","headers","Authorization","Accept","body","JSON","stringify","jsonrpc","Date","params","sent","json","result","Error","t0","console","error","useEffect","handleMessage","event","_event$data","data","_event$data2","_event$data4","_event$data5","_event$data6","_event$data3","log","addEventListener","removeEventListener","React","Provider","value","title","src","style","display","useGrinderyLogin","useContext"],"mappings":"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"}